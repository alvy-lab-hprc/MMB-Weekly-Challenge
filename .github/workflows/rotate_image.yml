name: Rotate Weekly Challenge Image

on:
  schedule:
    - cron: '0 5 * * 1,3'  # Runs at 5:00 AM UTC, which is midnight CST/CDT in Oklahoma City (every Monday and Wednesday)
  workflow_dispatch:  # Allows manual triggering of the workflow

jobs:
  rotate_image:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3
      with:
        token: ${{ secrets.GH_TOKEN }}  # Use GitHub Secret for authentication

    - name: Verify Folder Structure
      run: |
        echo "Listing repository root contents"
        ls -l
        echo "Listing weekly_challenges folder contents"
        ls -l ./weekly_challenges

    - name: Rotate Image
      run: |
        # Directories
        CHALLENGE_FOLDER="weekly_challenges"
        TARGET_FOLDER="target"
        TEST_FILE="$TARGET_FOLDER/Current.png"
        
        # Ensure target folder exists
        mkdir -p "$TARGET_FOLDER"

        # Get list of images sorted by name (expected to be WC-1.png to WC-8.png)
        IMAGES=($(ls "$CHALLENGE_FOLDER" | sort))

        # If Current.png exists, determine the last used image
        if [ -f "$TEST_FILE" ]; then
          LAST_USED=$(basename $(readlink -f "$TEST_FILE"))
          LAST_INDEX=-1
          
          # Find the index of the last used image
          for i in "${!IMAGES[@]}"; do
            if [[ "${IMAGES[$i]}" == "$LAST_USED" ]]; then
              LAST_INDEX=$i
              break
            fi
          done

          # Determine the next image index (cycle through images)
          NEXT_INDEX=$(( (LAST_INDEX + 1) % ${#IMAGES[@]} ))
        else
          # Start with the first image if no history exists
          NEXT_INDEX=0
        fi

        # Get the next image filename
        NEXT_IMAGE="${IMAGES[$NEXT_INDEX]}"

        # Copy the next image as 'Current.png'
        cp "$CHALLENGE_FOLDER/$NEXT_IMAGE" "$TEST_FILE"

    - name: Commit and Push Changes
      run: |
        git config --global user.name "github-actions[bot]"
        git config --global user.email "github-actions[bot]@users.noreply.github.com"
        git add .  # Stage changes
        git commit -m "Updated challenge image to $NEXT_IMAGE" || echo "No changes to commit"
        git push origin main
      env:
        GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}  # Authenticate using GitHub Secrets
