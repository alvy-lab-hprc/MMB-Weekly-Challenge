name: Rotate Weekly Challenge Image

on:
  schedule:
    - cron: '0 5 * * 1,3'  # Runs at 5:00 AM UTC, which is midnight CST/CDT in Oklahoma City
  workflow_dispatch:  # Allows manual triggering of the workflow

jobs:
  rotate_image:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3

    - name: Verify Folder Structure
      run: |
        # List the contents of the MMB-Weekly-Challenge directory
        echo "Listing MMB-Weekly-Challenge folder contents"
        ls -l MMB-Weekly-Challenge

        # List the contents of the weekly_challenges directory
        echo "Listing weekly_challenges folder contents"
        ls -l MMB-Weekly-Challenge/weekly_challenges

    - name: Rotate Image
      run: |
        # Define paths
        CHALLENGE_FOLDER="MMB-Weekly-Challenge/weekly_challenges"
        TEST_FOLDER="MMB-Weekly-Challenge/test"
        TEST_FILE="$TEST_FOLDER/Current.png"

        # Ensure the test folder exists
        mkdir -p "$TEST_FOLDER"

        # Get the list of challenge images sorted alphabetically
        IMAGES=($(ls "$CHALLENGE_FOLDER" | sort))
        
        # Read the last used image (if it exists)
        if [ -f "$TEST_FILE" ]; then
          LAST_USED=$(basename $(readlink -f "$TEST_FILE"))
          LAST_INDEX=-1
          
          # Find the index of the last used image
          for i in "${!IMAGES[@]}"; do
            if [[ "${IMAGES[$i]}" == "$LAST_USED" ]]; then
              LAST_INDEX=$i
              break
            fi
          done

          # Determine the next image index (cycle through)
          NEXT_INDEX=$(( (LAST_INDEX + 1) % ${#IMAGES[@]} ))
        else
          # Start with the first image if no history exists
          NEXT_INDEX=0
        fi

        # Get the next image filename
        NEXT_IMAGE="${IMAGES[$NEXT_INDEX]}"
        
        # Copy the next image as 'Current.png'
        cp "$CHALLENGE_FOLDER/$NEXT_IMAGE" "$TEST_FILE"

    - name: Commit and Push Changes
      run: |
        git config user.name "github-actions[bot]"
        git config user.email "github-actions[bot]@users.noreply.github.com"
        git add .  # Adds changes to the staging area
        git commit -m "Updated challenge image to $NEXT_IMAGE" || echo "No changes to commit"
        git push
