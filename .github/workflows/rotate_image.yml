name: Rotate Weekly Challenge Image

on:
  schedule:
    - cron: '30 5 * * 0,2'  # Runs at 5:30 AM UTC on Sundays (11:30 PM CST) and Tuesdays (11:30 PM CST)
  workflow_dispatch:  # Allows manual triggering of the workflow

jobs:
  rotate_image:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3
      with:
        token: ${{ secrets.GH_TOKEN }}  # Use GitHub Secret for authentication

    - name: Verify Folder Structure
      run: |
        echo "Listing repository root contents"
        ls -l
        echo "Listing weekly_challenges folder contents"
        ls -l ./weekly_challenges

    - name: Rotate Image
      run: |
        # Directories
        CHALLENGE_FOLDER="weekly_challenges"
        TARGET_FOLDER="target"
        TEST_FILE="$TARGET_FOLDER/Current.png"
        LAST_USED_FILE="$TARGET_FOLDER/last_used.txt"  # Store the last used image name
        
        # Ensure target folder exists
        mkdir -p "$TARGET_FOLDER"

        # Get list of images sorted by name (expected to be WC-1.png to WC-8.png)
        IMAGES=($(ls "$CHALLENGE_FOLDER" | sort))

        # If last_used.txt exists, get the last used image from it
        if [ -f "$LAST_USED_FILE" ]; then
          LAST_USED=$(cat "$LAST_USED_FILE")
        else
          # If last_used.txt doesn't exist, start with WC-1.png
          LAST_USED="WC-1.png"
        fi

        # Find the index of the last used image
        LAST_INDEX=-1
        for i in "${!IMAGES[@]}"; do
          if [[ "${IMAGES[$i]}" == "$LAST_USED" ]]; then
            LAST_INDEX=$i
            break
          fi
        done

        # Determine the next image index (cycle through images)
        NEXT_INDEX=$(( (LAST_INDEX + 1) % ${#IMAGES[@]} ))
        
        # Get the next image filename
        NEXT_IMAGE="${IMAGES[$NEXT_INDEX]}"

        # Copy the next image as 'Current.png'
        cp "$CHALLENGE_FOLDER/$NEXT_IMAGE" "$TEST_FILE"

        # Update the last used image file with the new image
        echo "$NEXT_IMAGE" > "$LAST_USED_FILE"

    - name: Commit and Push Changes
      run: |
        git config --global user.name "github-actions[bot]"
        git config --global user.email "github-actions[bot]@users.noreply.github.com"
        
        # Fetch the latest changes from the remote before pushing
        git pull origin main --rebase  # Ensure we're up to date with the remote
        
        # Add all changes (including last_used.txt)
        git add .
        
        # Commit changes, or echo "No changes to commit" if there's nothing to commit
        git commit -m "Updated challenge image to $NEXT_IMAGE" || echo "No changes to commit"
        
        # Push changes to the repository
        git push origin main
      env:
        GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}  # Authenticate using GitHub Secrets
